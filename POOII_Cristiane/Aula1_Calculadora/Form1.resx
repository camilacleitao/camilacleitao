<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iZD22M/O4pUUWrcx7CNobwUUURGtj//Z
</value>
  </data>
</root>